{"version":3,"sources":["services/movies-api.js","components/MoviesList/MoviesList.js","components/MoviesList/MoviesList.module.css","views/HomePage/HomePage.js"],"names":["API_KEY","language","a","page","axios","get","response","data","defaults","baseURL","fetchMovieDetails","movieId","fetchMovie","query","results","fetchActors","fetchReviews","getTrandingMovies","MoviesList","movies","location","useLocation","className","styles","list","map","movie","item","to","pathname","id","state","from","search","src","poster_path","alt","title","width","module","exports","HomePage","useState","setMovies","useEffect","then","films"],"mappings":"+TAEMA,EAAU,mCACVC,EAAW,Q,4CAIjB,0CAAAC,EAAA,6DAAiCC,EAAjC,+BAAwC,EAAxC,SACyBC,IAAMC,IAAN,qCACSL,EADT,qBAC6BC,EAD7B,iBAC8CE,IAFvE,cACQG,EADR,gBAIeA,EAASC,KAJxB,mF,wBAHAH,IAAMI,SAASC,QAAU,gCAWlB,IAAMC,EAAiB,uCAAG,WAAOC,GAAP,eAAAT,EAAA,sEACRE,IAAMC,IAAN,gBAAmBM,EAAnB,oBAAsCX,IAD9B,cACzBM,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAMjBK,EAAU,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACDE,IAAMC,IAAN,+BACGL,EADH,kBACoBa,EADpB,gCADC,cAClBP,EADkB,yBAIjBA,EAASC,KAAKO,SAJG,2CAAH,sDAQVC,EAAW,uCAAG,WAAOJ,GAAP,eAAAT,EAAA,sEACFE,IAAMC,IAAN,gBACZM,EADY,4BACeX,EADf,oBADE,cACnBM,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAQXS,EAAY,uCAAG,WAAOL,GAAP,eAAAT,EAAA,sEACHE,IAAMC,IAAN,gBACZM,EADY,4BACeX,EADf,2BADG,cACpBM,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOVU,I,4EC5Cf,2CA6CeC,IArCf,YAAiC,IAAXC,EAAU,EAAVA,OACdC,EAAWC,cAEjB,OACE,oBAAIC,UAAWC,IAAOC,KAAtB,SACGL,EAAOM,KAAI,SAACC,GACX,OACE,oBAAmBJ,UAAWC,IAAOI,KAArC,SAGE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMI,IAC3BC,MAAO,CACLC,KACwB,MAAtBZ,EAASS,SACLT,EAASS,SAAWT,EAASa,OAC7Bb,EAASS,WAPrB,SAWE,qBACEK,IAAG,UAzBF,mCAyBE,OAAgBR,EAAMS,aACzBC,IAAG,UAAKV,EAAMW,OACdC,MAAM,WAjBHZ,EAAMI,W,mBCdzBS,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iFCsB1CC,UAnBf,WACE,MAA4BC,mBAAS,IAArC,mBAAOvB,EAAP,KAAewB,EAAf,KAUA,OARAC,qBAAU,WAER3B,cAAoB4B,MAAK,SAACC,GAAD,OAEvBH,EAAUG,EAAMhC,cAEjB,IAGD,gCACE,0CACA,cAAC,IAAD,CAAYK,OAAQA","file":"static/js/homepage.90f3ba2a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"22c199c70cf21c77ac06b5d74d444545\";\r\nconst language = \"en-US\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\n//запрос на популярные фильмы\r\nasync function getTrandingMovies(page = 1) {\r\n  const response = await axios.get(\r\n    `trending/movie/day?api_key=${API_KEY}&language=${language}&page=${page}`\r\n  );\r\n  return await response.data;\r\n}\r\n\r\n//запрос фильма по id\r\nexport const fetchMovieDetails = async (movieId) => {\r\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\r\n  return response.data;\r\n};\r\n\r\n//запрос данных по query\r\nexport const fetchMovie = async (query) => {\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\n//запрос информации о актёрском состав\r\nexport const fetchActors = async (movieId) => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n//запрос обзоров\r\nexport const fetchReviews = async (movieId) => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport default getTrandingMovies;\r\n","import { Link } from \"react-router-dom\";\r\nimport styles from \"./MoviesList.module.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BASE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n//для того чтобы загрузились постеры на странице, нужно к BASE_URL добавить адрес постера (адрес постера это свойство poster_path в объекте results)\r\n\r\nfunction MoviesList({ movies }) {\r\n  const location = useLocation();\r\n  // console.log(location);\r\n  return (\r\n    <ul className={styles.list}>\r\n      {movies.map((movie) => {\r\n        return (\r\n          <li key={movie.id} className={styles.item}>\r\n            {/* при клике на какой-то фильм мы должны переходить на movieDetails\r\n            (с помощью Link), и также реализуем переход назад по кнопке (с помощью state: { from: \"/\" }) */}\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${movie.id}`,\r\n                state: {\r\n                  from:\r\n                    location.pathname !== \"/\"\r\n                      ? location.pathname + location.search\r\n                      : location.pathname,\r\n                },\r\n              }}\r\n            >\r\n              <img\r\n                src={`${BASE_URL}${movie.poster_path}`}\r\n                alt={`${movie.title}`}\r\n                width=\"200\"\r\n              />\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\nexport default MoviesList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MoviesList_list__1MFTm\",\"item\":\"MoviesList_item__3K03u\"};","import { useState, useEffect } from \"react\";\r\nimport getTrandingMovies from \"../../services/movies-api\";\r\nimport MoviesList from \"../../components/MoviesList/MoviesList\";\r\n\r\nfunction HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //запрос на сервер\r\n    getTrandingMovies().then((films) =>\r\n      // console.log(films.results)\r\n      setMovies(films.results)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Homepage</h1>\r\n      <MoviesList movies={movies} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}