{"version":3,"sources":["services/movies-api.js","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["API_KEY","language","a","page","axios","get","response","data","defaults","baseURL","fetchMovieDetails","movieId","fetchMovie","query","results","fetchActors","fetchReviews","getTrandingMovies","Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","params","useParams","history","useHistory","location","useLocation","useEffect","then","film","type","onClick","push","state","from","size","title","src","backdrop_path","alt","overview","to","pathname","className","styles","link","activeClassName","activeLink","fallback","path"],"mappings":"+TAEMA,EAAU,mCACVC,EAAW,Q,4CAIjB,0CAAAC,EAAA,6DAAiCC,EAAjC,+BAAwC,EAAxC,SACyBC,IAAMC,IAAN,qCACSL,EADT,qBAC6BC,EAD7B,iBAC8CE,IAFvE,cACQG,EADR,gBAIeA,EAASC,KAJxB,mF,wBAHAH,IAAMI,SAASC,QAAU,gCAWlB,IAAMC,EAAiB,uCAAG,WAAOC,GAAP,eAAAT,EAAA,sEACRE,IAAMC,IAAN,gBAAmBM,EAAnB,oBAAsCX,IAD9B,cACzBM,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAMjBK,EAAU,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACDE,IAAMC,IAAN,+BACGL,EADH,kBACoBa,EADpB,gCADC,cAClBP,EADkB,yBAIjBA,EAASC,KAAKO,SAJG,2CAAH,sDAQVC,EAAW,uCAAG,WAAOJ,GAAP,eAAAT,EAAA,sEACFE,IAAMC,IAAN,gBACZM,EADY,4BACeX,EADf,oBADE,cACnBM,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAQXS,EAAY,uCAAG,WAAOL,GAAP,eAAAT,EAAA,sEACHE,IAAMC,IAAN,gBACZM,EADY,4BACeX,EADf,2BADG,cACpBM,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOVU,I,6JCpCTC,EAAOC,gBAAK,kBAChB,gCAEIC,EAAUD,gBAAK,kBACnB,gCAuEaE,UAlEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAASC,cAETC,EAAUC,cACVC,EAAWC,cAKjB,OAHAC,qBAAU,WACRrB,YAAkBe,EAAOd,SAASqB,MAAK,SAACC,GAAD,OAAUT,EAASS,QACzD,CAACR,EAAOd,UACG,OAAVY,EACK,2IAQP,qCACE,yBAAQW,KAAK,SAASC,QANP,WAAO,IAAD,EACvBR,EAAQS,KAAR,OAAaP,QAAb,IAAaA,GAAb,UAAaA,EAAUQ,aAAvB,aAAa,EAAiBC,OAK5B,UACE,+BACE,cAAC,IAAD,CAAmBC,KAAM,OAF7B,aAMA,6BAAKhB,EAAMiB,QACX,qBAAKC,IAAG,UA9BG,mCA8BH,OAAgBlB,EAAMmB,eAAiBC,IAAI,KACnD,4BAAIpB,EAAMqB,WACV,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAarB,EAAOd,QAApB,SACR0B,MAAO,CAAEC,KAAMT,EAASQ,QAE1BU,UAAWC,IAAOC,KAClBC,gBAAiBF,IAAOG,WAN1B,kBAUA,cAAC,IAAD,CACEN,GAAI,CACFC,SAAS,WAAD,OAAarB,EAAOd,QAApB,YACR0B,MAAO,CAAEC,KAAMT,EAASQ,QAE1BU,UAAWC,IAAOC,KAClBC,gBAAiBF,IAAOG,WAN1B,qBAWA,cAAC,WAAD,CAAUC,SAAU,wDAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,kBAAa5B,EAAOd,QAApB,SAAX,SACE,cAACO,EAAD,CAAMP,QAASc,EAAOd,YAGxB,cAAC,IAAD,CAAO0C,KAAI,kBAAa5B,EAAOd,QAApB,YAAX,SACE,cAACS,EAAD,CAAST,QAASc,EAAOd","file":"static/js/moviedetails.b500b022.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"22c199c70cf21c77ac06b5d74d444545\";\r\nconst language = \"en-US\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\n//запрос на популярные фильмы\r\nasync function getTrandingMovies(page = 1) {\r\n  const response = await axios.get(\r\n    `trending/movie/day?api_key=${API_KEY}&language=${language}&page=${page}`\r\n  );\r\n  return await response.data;\r\n}\r\n\r\n//запрос фильма по id\r\nexport const fetchMovieDetails = async (movieId) => {\r\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\r\n  return response.data;\r\n};\r\n\r\n//запрос данных по query\r\nexport const fetchMovie = async (query) => {\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\n//запрос информации о актёрском состав\r\nexport const fetchActors = async (movieId) => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n//запрос обзоров\r\nexport const fetchReviews = async (movieId) => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport default getTrandingMovies;\r\n","import { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { Route, useParams } from \"react-router\";\r\nimport { useHistory, useLocation, NavLink, Switch } from \"react-router-dom\";\r\nimport { AiOutlineRollback } from \"react-icons/ai\";\r\nimport { fetchMovieDetails } from \"../../services/movies-api\";\r\n// import Cast from \"../Cast/Cast\";\r\n// import Reviews from \"../Reviews/Reviews\";\r\nimport styles from \"../../components/Navigation/Navigation.module.css\";\r\nconst Cast = lazy(() =>\r\n  import(\"../Cast/Cast.js\" /* webpackChunkName: \"cast\" */)\r\n);\r\nconst Reviews = lazy(() =>\r\n  import(\"../Reviews/Reviews.js\" /*webpackChunkName: \"reviews\" */)\r\n);\r\n\r\nconst BASE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nfunction MovieDetailsPage() {\r\n  const [movie, setMovie] = useState([]);\r\n  //когда мы кликаем на фильм в параматрах url получаем id фильма, поэтому с помощью id в useEffect мы можем отправлять запросы к конкретным фильмам по id отрисовывать\r\n  const params = useParams();\r\n  // console.log(params); // {movieId: '438631'}\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetails(params.movieId).then((film) => setMovie(film));\r\n  }, [params.movieId]);\r\n  if (movie === null) {\r\n    return <h1>Данных по фильму нет</h1>;\r\n  }\r\n\r\n  const handleBack = () => {\r\n    history.push(location?.state?.from);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={handleBack}>\r\n        <span>\r\n          <AiOutlineRollback size={20} />\r\n        </span>\r\n        Go back\r\n      </button>\r\n      <h1>{movie.title}</h1>\r\n      <img src={`${BASE_URL}${movie.backdrop_path}`} alt=\"\" />\r\n      <p>{movie.overview}</p>\r\n      <NavLink\r\n        to={{\r\n          pathname: `/movies/${params.movieId}/cast`,\r\n          state: { from: location.state },\r\n        }}\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Cast\r\n      </NavLink>\r\n      <NavLink\r\n        to={{\r\n          pathname: `/movies/${params.movieId}/reviews`,\r\n          state: { from: location.state },\r\n        }}\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Reviews\r\n      </NavLink>\r\n\r\n      <Suspense fallback={<h1>Loading... Please wait</h1>}>\r\n        <Switch>\r\n          <Route path={`/movies/${params.movieId}/cast`}>\r\n            <Cast movieId={params.movieId} />\r\n          </Route>\r\n\r\n          <Route path={`/movies/${params.movieId}/reviews`}>\r\n            <Reviews movieId={params.movieId} />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n\r\n//кликая на Go back мы проверяем location state from, если он будет nulll undefined врент на homepage, если location state from вернет строку, то оно вернется по тому пути что вернет нам location state from\r\n//добавляем 2 раута, добавляем 2 linka, и в этих компонентам используем useEffect дл получения данных поcasty rewies\r\n//делаем lazy\r\n"],"sourceRoot":""}