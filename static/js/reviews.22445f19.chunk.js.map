{"version":3,"sources":["views/Reviews/Reviews.js"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchReviews","then","response","results","length","map","item","author","content","id"],"mappings":"kLAkCeA,UA9Bf,YAA+B,IAAZC,EAAW,EAAXA,QACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,qBAAU,WACRC,YAAaL,GAASM,MAAK,SAACC,GAAD,OAAcJ,EAAWI,EAASC,cAC5D,CAACR,IAEF,mCACGE,EAAQO,OAAS,EAChB,6BACGP,EAAQQ,KAAI,SAACC,GAAD,OACX,+BACE,8BACE,4CACCA,EAAKC,UAER,4BAAID,EAAKE,YALFF,EAAKG,SAUlB","file":"static/js/reviews.22445f19.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { fetchReviews } from \"../../services/movies-api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n  useEffect(() => {\r\n    fetchReviews(movieId).then((response) => setReviews(response.results));\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {reviews.length > 0 ? (\r\n        <ul>\r\n          {reviews.map((item) => (\r\n            <li key={item.id}>\r\n              <p>\r\n                <span>Author: </span>\r\n                {item.author}\r\n              </p>\r\n              <p>{item.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <h2>No reviews</h2>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nReviews.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}